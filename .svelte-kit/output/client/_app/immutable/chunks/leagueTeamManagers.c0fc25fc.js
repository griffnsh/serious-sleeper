import{P as i,l as g,w as m,F as w,I as v,Q as c,m as M}from"./records.35358e58.js";import{af as o}from"./index.78a9f0bb.js";const U=async(s=g)=>{if(o(i)[s])return o(i)[s];const t=await fetch(`https://api.sleeper.app/v1/league/${s}`,{compress:!0}).catch(r=>{console.error(r)}),e=await t.json().catch(r=>{console.error(r)});if(t.ok)return i.update(r=>(r[s]=e,r)),e;throw new Error(e)},S=async()=>{if(o(c)&&o(c).currentSeason)return o(c);let s=g,t={},e={},r=null;for(;s&&s!=0;){const[f,l,d]=await m(fetch(`https://api.sleeper.app/v1/league/${s}/users`,{compress:!0}),U(s),fetch(`https://api.sleeper.app/v1/league/${s}/rosters`,{compress:!0})).catch(a=>{console.error(a)}),[_,h]=await m(f.json(),d.json()).catch(a=>{console.error(a)}),p=parseInt(l.season);s=l.previous_league_id,r||(r=p),t[p]={};const u=D(_);for(const a in u)e[a]||(e[a]=u[a]);for(const a of h)t[p][a.roster_id]={team:w(u,a.owner_id),managers:v(a)}}const n={currentSeason:r,teamManagersMap:t,users:e};return c.update(()=>n),n},D=s=>{let t={};for(const e of s){e.user_name=e.user_name??e.display_name,t[e.user_id]=e;const r=M.find(n=>n.managerID===e.user_id);r&&(t[e.user_id].display_name=r.name)}return t};export{U as a,S as g};
