import{a as M}from"./leagueTeamManagers.c0fc25fc.js";import{g as k}from"./leagueRosters.51b8caa5.js";import{z as h,w as v}from"./records.35358e58.js";import{af as _}from"./index.78a9f0bb.js";const z=async()=>{if(_(h).length)return _(h);const s=await M().catch(e=>{console.error(e)});let a=s.status=="complete"?s.league_id:s.previous_league_id;const n=await j(a);return h.update(()=>n),n},j=async s=>{const a=[];for(;s&&s!=0;){const n=await A(s),{losersData:e,winnersData:o,year:t,previousRosters:r,numDivisions:c,playoffRounds:l,toiletRounds:p,leagueMetadata:m}=n;s=n.previousSeasonID;const d=L({previousRosters:r,leagueMetadata:m,numDivisions:c}),f=[];for(const i in d)f.push(d[i]);const w=o.filter(i=>i.r==l&&i.t1_from.w)[0],g=w.w,u=w.l,R=o.filter(i=>i.r==l&&i.t1_from.l)[0].w,y=e.filter(i=>i.r==p&&(!i.t1_from||i.t1_from.w))[0].w;if(!g)continue;const D={year:t,champion:g,second:u,third:R,divisions:f,toilet:y};a.push(D)}return a},A=async s=>{const a=[fetch(`https://api.sleeper.app/v1/league/${s}`,{compress:!0}),k(s),fetch(`https://api.sleeper.app/v1/league/${s}/losers_bracket`,{compress:!0}),fetch(`https://api.sleeper.app/v1/league/${s}/winners_bracket`,{compress:!0})],[n,e,o,t]=await v(...a).catch(u=>{console.error(u)});if(!n.ok||!o.ok||!t.ok)throw new Error(data);const r=[n.json(),o.json(),t.json()],[c,l,p]=await v(...r).catch(u=>{console.error(u)}),m=c.season,d=e.rosters,f=c.settings.divisions||1;s=c.previous_league_id;const w=p[p.length-1].r,g=l[l.length-1].r;return{losersData:l,winnersData:p,year:m,previousRosters:d,numDivisions:f,previousSeasonID:s,playoffRounds:w,toiletRounds:g,leagueMetadata:c.metadata}},L=({previousRosters:s,leagueMetadata:a,numDivisions:n})=>{const e={};for(let o=1;o<=n;o++)e[o]={name:a?a[`division_${o}`]:null,wins:-1,points:-1};for(const o in s){const t=s[o].settings,r=!t.division||t.division>n?1:t.division;(t.wins>e[r].wins||t.wins==e[r].wins&&t.fpts+t.fpts_decimal/100==e[r].points)&&(e[r].points=t.fpts+t.fpts_decimal/100,e[r].wins=t.wins,e[r].rosterID=o)}return e};export{z as g};
