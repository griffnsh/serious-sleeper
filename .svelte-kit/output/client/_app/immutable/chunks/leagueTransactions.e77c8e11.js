import{a as w,g as v}from"./leagueTeamManagers.c0fc25fc.js";import{M as h,w as m,l as _}from"./records.35358e58.js";import{g as y}from"./nflState.5273b638.js";import{af as O}from"./index.78a9f0bb.js";const M=!0,T=M,N=async(e,s=!1)=>{const l=O(h);if(l.totals)return{transactions:p(e,l.transactions),totals:l.totals,stale:!1};if(!s&&T){let u=await JSON.parse(localStorage.getItem("transactions"));if(u)return u.transactions=p(e,u.transactions),u.stale=!0,u}const t=await y().catch(u=>{console.error(u)});let r=18;t.season_type=="regular"&&(r=t.week);const{transactionsData:o,currentSeason:f}=await D(r,_).catch(u=>{console.error(u)}),{transactions:i,totals:c}=await S({transactionsData:o,currentSeason:f}),a={transactions:i,totals:c};return localStorage.setItem("transactions",JSON.stringify(a)),h.update(()=>a),{transactions:p(e,i),totals:c,stale:!1}},p=(e,s)=>{if(e){const t=[],r=[];let o=0;for(;(t.length<3||r.length<3)&&o<s.length;)s[o].type=="waiver"&&r.length<3?r.push(s[o]):s[o].type=="trade"&&t.length<3&&t.push(s[o]),o++;return{trades:t,waivers:r}}return s},D=async(e,s)=>{e=e>0?e:1;const l=[];let t=null;for(;s&&s!=0;){const a=await w(s).catch(u=>{console.error(u)});l.push(s),t||(t=a.season),s=a.previous_league_id}const r=[];for(const a of l){for(;e>0;)r.push(fetch(`https://api.sleeper.app/v1/league/${a}/transactions/${e}`,{compress:!0})),e--;e=18}const o=await m(...r).catch(a=>{console.error(a)}),f=[];for(const a of o){if(a==null||!a.ok){console.error(a);continue}f.push(a.json())}const i=await m(...f).catch(a=>{console.error(a)});let c=[];for(const a of i)c=c.concat(a);return{transactionsData:c,currentSeason:t}},S=async({transactionsData:e,currentSeason:s})=>{const l=[],t={allTime:{},seasons:{}},r=await v(),o=e.sort((f,i)=>i.status_updated-f.status_updated);for(const f of o){let{digestedTransaction:i,season:c,success:a}=A({transaction:f,currentSeason:s});if(a){l.push(i),r.teamManagersMap[c]||(c--,r.teamManagersMap[c]||(c+=2));for(const u of i.rosters){const g=i.type;for(const n of r.teamManagersMap[c][u].managers)t.allTime[n]||(t.allTime[n]={trade:0,waiver:0}),t.allTime[n][g]++;t.seasons[c]||(t.seasons[c]={}),t.seasons[c][u]||(t.seasons[c][u]={trade:0,waiver:0,rosterID:u}),t.seasons[c][u][g]++}}}return{transactions:l,totals:t}},x=e=>{const s=new Date(e),l=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t=s.getFullYear(),r=l[s.getMonth()],o=s.getDate(),f=s.getHours(),i=s.getMinutes();return r+" "+o+" "+t+", "+(f%12==0?12:f%12)+":"+i+(f/12>=1?"PM":"AM")},A=({transaction:e,currentSeason:s})=>{var g;if(e.status=="failed")return{success:!1};const l=[],t=e.roster_ids,r=(g=e.settings)==null?void 0:g.waiver_bid,o=x(e.status_updated),f=parseInt(o.split(",")[0].split(" ")[2]);let i={id:e.transaction_id,date:o,season:f,type:"waiver",rosters:t,moves:[]};e.type=="trade"&&(i.type="trade"),f!=s&&(i.previousOwners=!0);const c=e.adds,a=e.drops,u=e.draft_picks;for(let n in c)n&&(l.push(n),i.moves.push(R(t,c,a,n,r)));for(let n in a){if(l.indexOf(n)>-1)continue;let d=new Array(t.length).fill(null);n&&(d[t.indexOf(a[n])]={type:"Dropped",player:n},i.moves.push(d))}for(let n of u){let d=new Array(t.length).fill(null);d[t.indexOf(n.owner_id)]={type:"trade",pick:{season:n.season,round:n.round,original_owner:null}},n.roster_id!=n.previous_owner_id&&(d[t.indexOf(n.owner_id)].pick.original_owner=n.roster_id),d[t.indexOf(n.previous_owner_id)]="origin",i.moves.push(d)}for(let n of e.waiver_budget){let d=new Array(t.length).fill(null);d[t.indexOf(n.receiver)]={type:"trade",budget:{amount:n.amount}},d[t.indexOf(n.sender)]="origin",i.moves.push(d)}return{digestedTransaction:i,season:f,success:!0}},R=(e,s,l,t,r)=>{let o=new Array(e.length).fill(null);return l&&l[t]?(o[e.indexOf(s[t])]={type:"trade",player:t},o[e.indexOf(l[t])]="origin",o):(o[e.indexOf(s[t])]={type:"Added",player:t,bid:r},o)};export{T as b,N as g};
