import {
  MDCComponent,
  MDCFoundation,
  __assign,
  __extends,
  __values
} from "./chunk-TCBN2E7P.js";

// node_modules/@material/linear-progress/constants.js
var cssClasses = {
  CLOSED_CLASS: "mdc-linear-progress--closed",
  CLOSED_ANIMATION_OFF_CLASS: "mdc-linear-progress--closed-animation-off",
  INDETERMINATE_CLASS: "mdc-linear-progress--indeterminate",
  REVERSED_CLASS: "mdc-linear-progress--reversed",
  ANIMATION_READY_CLASS: "mdc-linear-progress--animation-ready"
};
var strings = {
  ARIA_HIDDEN: "aria-hidden",
  ARIA_VALUEMAX: "aria-valuemax",
  ARIA_VALUEMIN: "aria-valuemin",
  ARIA_VALUENOW: "aria-valuenow",
  BUFFER_BAR_SELECTOR: ".mdc-linear-progress__buffer-bar",
  FLEX_BASIS: "flex-basis",
  PRIMARY_BAR_SELECTOR: ".mdc-linear-progress__primary-bar"
};
var animationDimensionPercentages = {
  PRIMARY_HALF: 0.8367142,
  PRIMARY_FULL: 2.00611057,
  SECONDARY_QUARTER: 0.37651913,
  SECONDARY_HALF: 0.84386165,
  SECONDARY_FULL: 1.60277782
};

// node_modules/@material/animation/util.js
var cssPropertyNameMap = {
  animation: {
    prefixed: "-webkit-animation",
    standard: "animation"
  },
  transform: {
    prefixed: "-webkit-transform",
    standard: "transform"
  },
  transition: {
    prefixed: "-webkit-transition",
    standard: "transition"
  }
};
var jsEventTypeMap = {
  animationend: {
    cssProperty: "animation",
    prefixed: "webkitAnimationEnd",
    standard: "animationend"
  },
  animationiteration: {
    cssProperty: "animation",
    prefixed: "webkitAnimationIteration",
    standard: "animationiteration"
  },
  animationstart: {
    cssProperty: "animation",
    prefixed: "webkitAnimationStart",
    standard: "animationstart"
  },
  transitionend: {
    cssProperty: "transition",
    prefixed: "webkitTransitionEnd",
    standard: "transitionend"
  }
};
function isWindow(windowObj) {
  return Boolean(windowObj.document) && typeof windowObj.document.createElement === "function";
}
function getCorrectPropertyName(windowObj, cssProperty) {
  if (isWindow(windowObj) && cssProperty in cssPropertyNameMap) {
    var el = windowObj.document.createElement("div");
    var _a = cssPropertyNameMap[cssProperty], standard = _a.standard, prefixed = _a.prefixed;
    var isStandard = standard in el.style;
    return isStandard ? standard : prefixed;
  }
  return cssProperty;
}
function getCorrectEventName(windowObj, eventType) {
  if (isWindow(windowObj) && eventType in jsEventTypeMap) {
    var el = windowObj.document.createElement("div");
    var _a = jsEventTypeMap[eventType], standard = _a.standard, prefixed = _a.prefixed, cssProperty = _a.cssProperty;
    var isStandard = cssProperty in el.style;
    return isStandard ? standard : prefixed;
  }
  return eventType;
}

// node_modules/@material/linear-progress/foundation.js
var MDCLinearProgressFoundation = (
  /** @class */
  function(_super) {
    __extends(MDCLinearProgressFoundation2, _super);
    function MDCLinearProgressFoundation2(adapter) {
      var _this = _super.call(this, __assign(__assign({}, MDCLinearProgressFoundation2.defaultAdapter), adapter)) || this;
      _this.observer = null;
      return _this;
    }
    Object.defineProperty(MDCLinearProgressFoundation2, "cssClasses", {
      get: function() {
        return cssClasses;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MDCLinearProgressFoundation2, "strings", {
      get: function() {
        return strings;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MDCLinearProgressFoundation2, "defaultAdapter", {
      get: function() {
        return {
          addClass: function() {
            return void 0;
          },
          attachResizeObserver: function() {
            return null;
          },
          forceLayout: function() {
            return void 0;
          },
          getWidth: function() {
            return 0;
          },
          hasClass: function() {
            return false;
          },
          setBufferBarStyle: function() {
            return null;
          },
          setPrimaryBarStyle: function() {
            return null;
          },
          setStyle: function() {
            return void 0;
          },
          removeAttribute: function() {
            return void 0;
          },
          removeClass: function() {
            return void 0;
          },
          setAttribute: function() {
            return void 0;
          }
        };
      },
      enumerable: false,
      configurable: true
    });
    MDCLinearProgressFoundation2.prototype.init = function() {
      var _this = this;
      this.determinate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);
      this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);
      this.progress = 0;
      this.buffer = 1;
      this.observer = this.adapter.attachResizeObserver(function(entries) {
        var e_1, _a;
        if (_this.determinate) {
          return;
        }
        try {
          for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {
            var entry = entries_1_1.value;
            if (entry.contentRect) {
              _this.calculateAndSetDimensions(entry.contentRect.width);
            }
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return))
              _a.call(entries_1);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
      });
      if (!this.determinate && this.observer) {
        this.calculateAndSetDimensions(this.adapter.getWidth());
      }
    };
    MDCLinearProgressFoundation2.prototype.setDeterminate = function(isDeterminate) {
      this.determinate = isDeterminate;
      if (this.determinate) {
        this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);
        this.adapter.setAttribute(strings.ARIA_VALUENOW, this.progress.toString());
        this.adapter.setAttribute(strings.ARIA_VALUEMAX, "1");
        this.adapter.setAttribute(strings.ARIA_VALUEMIN, "0");
        this.setPrimaryBarProgress(this.progress);
        this.setBufferBarProgress(this.buffer);
        return;
      }
      if (this.observer) {
        this.calculateAndSetDimensions(this.adapter.getWidth());
      }
      this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);
      this.adapter.removeAttribute(strings.ARIA_VALUENOW);
      this.adapter.removeAttribute(strings.ARIA_VALUEMAX);
      this.adapter.removeAttribute(strings.ARIA_VALUEMIN);
      this.setPrimaryBarProgress(1);
      this.setBufferBarProgress(1);
    };
    MDCLinearProgressFoundation2.prototype.isDeterminate = function() {
      return this.determinate;
    };
    MDCLinearProgressFoundation2.prototype.setProgress = function(value) {
      this.progress = value;
      if (this.determinate) {
        this.setPrimaryBarProgress(value);
        this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());
      }
    };
    MDCLinearProgressFoundation2.prototype.getProgress = function() {
      return this.progress;
    };
    MDCLinearProgressFoundation2.prototype.setBuffer = function(value) {
      this.buffer = value;
      if (this.determinate) {
        this.setBufferBarProgress(value);
      }
    };
    MDCLinearProgressFoundation2.prototype.getBuffer = function() {
      return this.buffer;
    };
    MDCLinearProgressFoundation2.prototype.open = function() {
      this.adapter.removeClass(cssClasses.CLOSED_CLASS);
      this.adapter.removeClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);
      this.adapter.removeAttribute(strings.ARIA_HIDDEN);
    };
    MDCLinearProgressFoundation2.prototype.close = function() {
      this.adapter.addClass(cssClasses.CLOSED_CLASS);
      this.adapter.setAttribute(strings.ARIA_HIDDEN, "true");
    };
    MDCLinearProgressFoundation2.prototype.isClosed = function() {
      return this.adapter.hasClass(cssClasses.CLOSED_CLASS);
    };
    MDCLinearProgressFoundation2.prototype.handleTransitionEnd = function() {
      if (this.adapter.hasClass(cssClasses.CLOSED_CLASS)) {
        this.adapter.addClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);
      }
    };
    MDCLinearProgressFoundation2.prototype.destroy = function() {
      _super.prototype.destroy.call(this);
      if (this.observer) {
        this.observer.disconnect();
      }
    };
    MDCLinearProgressFoundation2.prototype.restartAnimation = function() {
      this.adapter.removeClass(cssClasses.ANIMATION_READY_CLASS);
      this.adapter.forceLayout();
      this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);
    };
    MDCLinearProgressFoundation2.prototype.setPrimaryBarProgress = function(progressValue) {
      var value = "scaleX(" + progressValue + ")";
      var transformProp = typeof window !== "undefined" ? getCorrectPropertyName(window, "transform") : "transform";
      this.adapter.setPrimaryBarStyle(transformProp, value);
    };
    MDCLinearProgressFoundation2.prototype.setBufferBarProgress = function(progressValue) {
      var value = progressValue * 100 + "%";
      this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);
    };
    MDCLinearProgressFoundation2.prototype.calculateAndSetDimensions = function(width) {
      var primaryHalf = width * animationDimensionPercentages.PRIMARY_HALF;
      var primaryFull = width * animationDimensionPercentages.PRIMARY_FULL;
      var secondaryQuarter = width * animationDimensionPercentages.SECONDARY_QUARTER;
      var secondaryHalf = width * animationDimensionPercentages.SECONDARY_HALF;
      var secondaryFull = width * animationDimensionPercentages.SECONDARY_FULL;
      this.adapter.setStyle("--mdc-linear-progress-primary-half", primaryHalf + "px");
      this.adapter.setStyle("--mdc-linear-progress-primary-half-neg", -primaryHalf + "px");
      this.adapter.setStyle("--mdc-linear-progress-primary-full", primaryFull + "px");
      this.adapter.setStyle("--mdc-linear-progress-primary-full-neg", -primaryFull + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-quarter", secondaryQuarter + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-quarter-neg", -secondaryQuarter + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-half", secondaryHalf + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-half-neg", -secondaryHalf + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-full", secondaryFull + "px");
      this.adapter.setStyle("--mdc-linear-progress-secondary-full-neg", -secondaryFull + "px");
      this.restartAnimation();
    };
    return MDCLinearProgressFoundation2;
  }(MDCFoundation)
);

// node_modules/@material/linear-progress/component.js
var MDCLinearProgress = (
  /** @class */
  function(_super) {
    __extends(MDCLinearProgress2, _super);
    function MDCLinearProgress2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MDCLinearProgress2.attachTo = function(root) {
      return new MDCLinearProgress2(root);
    };
    Object.defineProperty(MDCLinearProgress2.prototype, "determinate", {
      set: function(value) {
        this.foundation.setDeterminate(value);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MDCLinearProgress2.prototype, "progress", {
      set: function(value) {
        this.foundation.setProgress(value);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MDCLinearProgress2.prototype, "buffer", {
      set: function(value) {
        this.foundation.setBuffer(value);
      },
      enumerable: false,
      configurable: true
    });
    MDCLinearProgress2.prototype.open = function() {
      this.foundation.open();
    };
    MDCLinearProgress2.prototype.close = function() {
      this.foundation.close();
    };
    MDCLinearProgress2.prototype.initialSyncWithDOM = function() {
      var _this = this;
      this.root.addEventListener("transitionend", function() {
        _this.foundation.handleTransitionEnd();
      });
    };
    MDCLinearProgress2.prototype.getDefaultFoundation = function() {
      var _this = this;
      var adapter = {
        addClass: function(className) {
          _this.root.classList.add(className);
        },
        forceLayout: function() {
          _this.root.getBoundingClientRect();
        },
        setBufferBarStyle: function(styleProperty, value) {
          var bufferBar = _this.root.querySelector(MDCLinearProgressFoundation.strings.BUFFER_BAR_SELECTOR);
          if (bufferBar) {
            bufferBar.style.setProperty(styleProperty, value);
          }
        },
        setPrimaryBarStyle: function(styleProperty, value) {
          var primaryBar = _this.root.querySelector(MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR);
          if (primaryBar) {
            primaryBar.style.setProperty(styleProperty, value);
          }
        },
        hasClass: function(className) {
          return _this.root.classList.contains(className);
        },
        removeAttribute: function(attributeName) {
          _this.root.removeAttribute(attributeName);
        },
        removeClass: function(className) {
          _this.root.classList.remove(className);
        },
        setAttribute: function(attributeName, value) {
          _this.root.setAttribute(attributeName, value);
        },
        setStyle: function(name, value) {
          _this.root.style.setProperty(name, value);
        },
        attachResizeObserver: function(callback) {
          var RO = window.ResizeObserver;
          if (RO) {
            var ro = new RO(callback);
            ro.observe(_this.root);
            return ro;
          }
          return null;
        },
        getWidth: function() {
          return _this.root.offsetWidth;
        }
      };
      return new MDCLinearProgressFoundation(adapter);
    };
    return MDCLinearProgress2;
  }(MDCComponent)
);

export {
  getCorrectEventName,
  cssClasses,
  strings,
  animationDimensionPercentages,
  MDCLinearProgressFoundation,
  MDCLinearProgress
};
/*! Bundled license information:

@material/linear-progress/constants.js:
  (**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *)

@material/animation/util.js:
  (**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *)

@material/linear-progress/foundation.js:
  (**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *)

@material/linear-progress/component.js:
  (**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *)
*/
//# sourceMappingURL=chunk-OTVXQFK2.js.map
